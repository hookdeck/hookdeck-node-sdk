/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Hookdeck from "../index";

export interface EventAttempt {
    /** Attempt ID */
    id: string;
    /** ID of the project */
    teamId: string;
    /** Event ID */
    eventId: string;
    /** Destination ID */
    destinationId: string;
    /** Attempt's HTTP response code */
    responseStatus?: number;
    /** Sequential number of attempts (up to and including this one) made for the associated event */
    attemptNumber?: number;
    trigger?: Hookdeck.AttemptTrigger;
    errorCode?: Hookdeck.AttemptErrorCodes;
    body?: Hookdeck.EventAttemptBody;
    /** URL of the destination where delivery was attempted */
    requestedUrl?: string;
    /** HTTP method used to deliver the attempt */
    httpMethod?: Hookdeck.EventAttemptHttpMethod;
    /** ID of associated bulk retry */
    bulkRetryId?: string;
    status: Hookdeck.AttemptStatus;
    /** Date the attempt was successful */
    successfulAt?: Date;
    /** Date the attempt was delivered */
    deliveredAt?: Date;
    /** Date the destination responded to this attempt */
    respondedAt?: Date;
    /** Time elapsed between attempt initiation and final delivery (in ms) */
    deliveryLatency?: number;
    /** Time elapsed between attempt initiation and a response from the destination (in ms) */
    responseLatency?: number;
    /** Date the attempt was last updated */
    updatedAt: Date;
    /** Date the attempt was created */
    createdAt: Date;
}
