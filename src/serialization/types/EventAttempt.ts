/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Hookdeck from "../../api/index";
import * as core from "../../core";
import { AttemptTrigger } from "./AttemptTrigger";
import { AttemptErrorCodes } from "./AttemptErrorCodes";
import { EventAttemptBody } from "./EventAttemptBody";
import { EventAttemptHttpMethod } from "./EventAttemptHttpMethod";
import { AttemptStatus } from "./AttemptStatus";

export const EventAttempt: core.serialization.ObjectSchema<serializers.EventAttempt.Raw, Hookdeck.EventAttempt> =
    core.serialization.object({
        id: core.serialization.string(),
        teamId: core.serialization.property("team_id", core.serialization.string()),
        eventId: core.serialization.property("event_id", core.serialization.string()),
        destinationId: core.serialization.property("destination_id", core.serialization.string()),
        responseStatus: core.serialization.property("response_status", core.serialization.number().optional()),
        attemptNumber: core.serialization.property("attempt_number", core.serialization.number().optional()),
        trigger: AttemptTrigger.optional(),
        errorCode: core.serialization.property("error_code", AttemptErrorCodes.optional()),
        body: EventAttemptBody.optional(),
        requestedUrl: core.serialization.property("requested_url", core.serialization.string().optional()),
        httpMethod: core.serialization.property("http_method", EventAttemptHttpMethod.optional()),
        bulkRetryId: core.serialization.property("bulk_retry_id", core.serialization.string().optional()),
        status: AttemptStatus,
        successfulAt: core.serialization.property("successful_at", core.serialization.date().optional()),
        deliveredAt: core.serialization.property("delivered_at", core.serialization.date().optional()),
        respondedAt: core.serialization.property("responded_at", core.serialization.date().optional()),
        deliveryLatency: core.serialization.property("delivery_latency", core.serialization.number().optional()),
        responseLatency: core.serialization.property("response_latency", core.serialization.number().optional()),
        updatedAt: core.serialization.property("updated_at", core.serialization.date()),
        createdAt: core.serialization.property("created_at", core.serialization.date()),
    });

export declare namespace EventAttempt {
    interface Raw {
        id: string;
        team_id: string;
        event_id: string;
        destination_id: string;
        response_status?: number | null;
        attempt_number?: number | null;
        trigger?: AttemptTrigger.Raw | null;
        error_code?: AttemptErrorCodes.Raw | null;
        body?: EventAttemptBody.Raw | null;
        requested_url?: string | null;
        http_method?: EventAttemptHttpMethod.Raw | null;
        bulk_retry_id?: string | null;
        status: AttemptStatus.Raw;
        successful_at?: string | null;
        delivered_at?: string | null;
        responded_at?: string | null;
        delivery_latency?: number | null;
        response_latency?: number | null;
        updated_at: string;
        created_at: string;
    }
}
